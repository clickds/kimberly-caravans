stages:
  - preparation
  - build
  - test
  - staging

# Variables
variables:
  MYSQL_ROOT_PASSWORD: root
  MYSQL_USER: mysql_user
  MYSQL_PASSWORD: mysql_password
  MYSQL_DATABASE: mysql_db
  DB_HOST: mysql

cache:
  key: "$CI_COMMIT_REF_SLUG"

# https://docs.gitlab.com/ee/ci/ssh_keys/
before_script:
  - "which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )"
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts

image: edbizarro/gitlab-ci-pipeline-php:7.4

composer:
  stage: preparation
  script:
    - php -v
    - composer -v
    - sudo composer self-update --2
    - composer -v
    - composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts --no-plugins --optimize-autoloader
  artifacts:
    paths:
      - vendor/
    expire_in: 1 days
    when: always
  only:
    - merge_requests

yarn:
  stage: preparation
  script:
    - yarn --version
    - yarn install --pure-lockfile
  cache:
    paths:
      - node_modules/
  artifacts:
    paths:
      - node_modules/
    expire_in: 1 days
    when: always
  only:
    - merge_requests

build-assets:
  stage: build
  dependencies:
    - yarn
  script:
    - yarn --version
    - yarn run production --progress false
  artifacts:
    paths:
      - public/css/
      - public/js/
      - public/fonts/
      - public/mix-manifest.json
    expire_in: 1 days
    when: always
  only:
    - merge_requests

phpunit:
  stage: test
  services:
    - mysql:5.7
  dependencies:
    - build-assets
    - composer
  script:
    - php -v
    - ./vendor/bin/phpunit --version
    - cp .env.ci .env.testing
    - php artisan key:generate --env=testing
    - ./vendor/bin/phpunit -d memory_limit=-1 -v --coverage-text --colors=never --stderr
  only:
    - merge_requests

phpcs:
  stage: test
  script:
    - ./vendor/bin/phpcs
  dependencies:
    - composer
  only:
    - merge_requests

.larastan:
  stage: test
  script:
    - ./vendor/bin/phpstan analyse --level=max app
  dependencies:
    - composer
  only:
    - merge_requests

deploy_to_staging:
  stage: staging
  image: geerlingguy/docker-ubuntu2004-ansible
  script:
    - ansible-galaxy install --force ansistrano.deploy ansistrano.rollback
    - .ansible/deploy-staging.sh
  environment:
    name: staging
  only:
    - staging
